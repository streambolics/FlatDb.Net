// <auto-generated />
using FlatDatabase.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace flatdatabase.Migrations
{
    [DbContext(typeof(FlatDbContext))]
    [Migration("20171124161607_Stepping1")]
    partial class Stepping1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("FlatDatabase.Models.Item", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("Amount");

                    b.Property<string>("Data0");

                    b.Property<string>("Data1");

                    b.Property<string>("Data2");

                    b.Property<string>("Data3");

                    b.Property<string>("Data4");

                    b.Property<string>("Data5");

                    b.Property<string>("Data6");

                    b.Property<string>("Data7");

                    b.Property<long>("Database");

                    b.Property<string>("DetailId");

                    b.Property<DateTime>("EndTime");

                    b.Property<string>("ItemId");

                    b.Property<string>("MasterId");

                    b.Property<long>("Sequence");

                    b.Property<DateTime>("StartTime");

                    b.Property<string>("StatusId");

                    b.Property<string>("SubTypeId");

                    b.Property<string>("Text");

                    b.Property<string>("TypeId");

                    b.HasKey("Id");

                    b.ToTable("Item");
                });
#pragma warning restore 612, 618
        }
    }
}
